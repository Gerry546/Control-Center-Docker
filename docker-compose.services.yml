version: "3.9"

########################################################################
########################### Secrets ####################################
########################################################################
secrets:
  github_omniauth_app_id:
    file: $DOCKERDIR/secrets/github_omniauth_app_id
  github_omniauth_app_secret:
    file: $DOCKERDIR/secrets/github_omniauth_app_secret

########################################################################
########################### SERVICES ###################################
########################################################################
services:
  ########################################################################
  # Gitlab
  ########################################################################
  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: gitlab
    networks:
      home_internal:
    security_opt:
      - no-new-privileges:true
    restart: always
    hostname: gitlab.estalor.com
    volumes:
      - $GITLAB_HOME/data:/var/opt/gitlab
      - $GITLAB_HOME/logs:/var/log/gitlab
      - $GITLAB_HOME/config:/etc/gitlab
    secrets:
      - github_omniauth_app_id
      - github_omniauth_app_secret
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://gitlab.estalor.com'
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        nginx['proxy_set_headers'] = {
          "X-Forwarded-Proto" => "https",
          "X-Forwarded-Ssl" => "on"
        }
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.gitlab-rtr.entrypoints=https"
      - "traefik.http.routers.gitlab-rtr.rule=Host(`gitlab.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.gitlab-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.gitlab-rtr.service=gitlab-svc"
      - "traefik.http.services.gitlab-svc.loadbalancer.server.port=80"
      # To ensure ssh works
      - "traefik.tcp.routers.gitlab-ssh.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.gitlab-ssh.entrypoints=ssh"
      - "traefik.tcp.routers.gitlab-ssh.service=gitlab-ssh-svc"
      - "traefik.tcp.services.gitlab-ssh-svc.loadbalancer.server.port=22"

  ########################################################################
  # VSCode
  ########################################################################
  vscode:
    image: lscr.io/linuxserver/code-server:latest
    container_name: vscode
    ports:
      - "$VSCODE_PORT:8443"
    volumes:
      - $DOCKERDIR:/data/docker
      - $HAHOMEDIR:/data/homeassistant
      - $HOMEDIR:/data/home
      - $DOCKERDIR/appdata/vscode:/config
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      DOCKER_HOST: tcp://socket-proxy:2375
    networks:
      socket_proxy:
      home_internal:
    security_opt:
      - no-new-privileges:true
    restart: always
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.vscode-rtr.entrypoints=https"
      - "traefik.http.routers.vscode-rtr.rule=Host(`code.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.vscode-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.vscode-rtr.service=vscode-svc"
      - "traefik.http.services.vscode-svc.loadbalancer.server.port=8443"

  ########################################################################
  # Guacd - Guacamole daemon
  ########################################################################
  guacd:
    image: guacamole/guacd
    container_name: guacd
    networks:
      home_internal:
    security_opt:
      - no-new-privileges:true
    restart: always

  ########################################################################
  # Guacamole - Remote desktop, SSH, on Telnet on any HTML5 Browser
  ########################################################################
  # Create all databases and tables first
  guacamole:
    image: guacamole/guacamole:latest
    container_name: guacamole
    environment:
      GUACD_HOSTNAME: guacd
      MYSQL_HOSTNAME: mariadb-guacemole
      MYSQL_PORT: $GUACDB_PORT
      MYSQL_DATABASE: guacemole
      MYSQL_USER: $GUAC_MYSQL_USER
      MYSQL_PASSWORD: $GUACEMOLE_PASSWORD
    networks:
      home_internal:
    security_opt:
      - no-new-privileges:true
    restart: always
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.guacamole-rtr.entrypoints=https"
      - "traefik.http.routers.guacamole-rtr.rule=Host(`guacamole.$DOMAINNAME_CLOUD_SERVER`)"
      - "traefik.http.routers.guacamole-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.guacamole-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.guacamole-rtr.service=guacamole-svc"
      - "traefik.http.services.guacamole-svc.loadbalancer.server.port=8080"

  ########################################################################
  # Portainer - WebUI for Containers
  ########################################################################
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    command: -H tcp://socket-proxy:2375
    volumes:
      - $DOCKERDIR/appdata/portainer/data:/data
    environment:
      - TZ=$TZ
    ports:
      - "9000:9000"
    networks:
      home_internal:
      socket_proxy:
    security_opt:
      - no-new-privileges:true
    restart: always
    depends_on:
      - socket-proxy
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.portainer-rtr.entrypoints=https"
      - "traefik.http.routers.portainer-rtr.rule=Host(`portainer.$DOMAINNAME_CLOUD_SERVER`)"
      - "traefik.http.routers.portainer-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.portainer-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.portainer-rtr.service=portainer-svc"
      - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"

  ########################################################################
  # Heimdall - Container dashboard
  ########################################################################
  heimdall:
    container_name: heimdall
    image: lscr.io/linuxserver/heimdall:latest
    networks:
      home_internal:
      socket_proxy:
    security_opt:
      - no-new-privileges:true
    restart: always
    volumes:
      - $DOCKERDIR/appdata/heimdall:/config
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      DOCKER_HOST: tcp://socket-proxy:2375
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.heimdall-rtr.entrypoints=https"
      - "traefik.http.routers.heimdall-rtr.rule=Host(`$DOMAINNAME_CLOUD_SERVER`,`www.$DOMAINNAME_CLOUD_SERVER`)"
      - "traefik.http.routers.heimdall-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.heimdall-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.heimdall-rtr.service=heimdall-svc"
      - "traefik.http.services.heimdall-svc.loadbalancer.server.port=80"

  ########################################################################
  # Dozzle - Runtime insight in running containers
  ########################################################################
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    networks:
      - home_internal
      - socket_proxy
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_FILTER: "status=running"
      DOCKER_HOST: tcp://socket-proxy:2375
    security_opt:
      - no-new-privileges:true
    restart: always
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.dozzle-rtr.entrypoints=https"
      - "traefik.http.routers.dozzle-rtr.rule=Host(`dozzle.$DOMAINNAME_CLOUD_SERVER`)"
      - "traefik.http.routers.dozzle-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.dozzle-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.dozzle-rtr.service=dozzle-svc"
      - "traefik.http.services.dozzle-svc.loadbalancer.server.port=8080"