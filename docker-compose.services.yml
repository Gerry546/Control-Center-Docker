version: "3.9"

########################################################################
########################### Secrets ####################################
########################################################################
secrets:
  github_omniauth_app_id:
    file: $DOCKERDIR/secrets/github_omniauth_app_id
  github_omniauth_app_secret:
    file: $DOCKERDIR/secrets/github_omniauth_app_secret

########################################################################
########################### SERVICES ###################################
########################################################################
services:
  ########################################################################
  # Gitea
  ########################################################################
  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      GITEA__DATABASE__DB_TYPE: mysql
      GITEA__DATABASE__HOST: mariadb-gitea:3306
      GITEA__DATABASE__NAME: gitea
      GITEA__DATABASE__USER: gitea
      GITEA__DATABASE__PASSWD: gitea
      GITEA__ADMIN__USER: $GITEA_ADMIN_USER
      GITEA__ADMIN__EMAIL: $GITEA_ADMIN_EMAIL
      GITEA__ADMIN__PASSWORD: $GITEA_ADMIN_PASS
    depends_on:
      - mariadb-gitea
    restart: always
    networks:
      gitea:
      home_internal:
          ipv4_address: $GITEA_IP # You can specify a static IP
    volumes:
      - ${DOCKERDIR}/appdata/gitea:/data
    ports:
      - "$GITEA_HTTP_PORT:3000"
    labels:
      - "traefik.enable=true"
      ## HTTP Access
      - "traefik.http.routers.gitea-http-router.entrypoints=https"
      - "traefik.http.routers.gitea-http-router.rule=Host(`gitea.$DOMAINNAME_CLOUD_SERVER`)"
      - "traefik.http.routers.gitea-http-router.tls=true"
      - "traefik.http.routers.gitea-http-router.priority=99"
      - "traefik.http.routers.gitea-http-router.middlewares=chain-oauth@file"
      - "traefik.http.routers.gitea-http-router.service=gitea-http-service"
      - "traefik.http.services.gitea-http-service.loadbalancer.server.port=3000"
      ## Docker access
      - "traefik.http.routers.gitea-docker-router.entrypoints=https"
      - "traefik.http.routers.gitea-docker-router.priority=100"
      - "traefik.http.routers.gitea-docker-router.rule=Host(`gitea.$DOMAINNAME_CLOUD_SERVER`) && (ClientIP(`$HOST_IP`, `172.0.0.0/8`) || PathPrefix(`/v2/`))"
      - "traefik.http.routers.gitea-docker-router.tls=true"
      - "traefik.http.routers.gitea-docker-router.middlewares=chain-no-auth@file"
      - "traefik.http.routers.gitea-docker-router.service=gitea-docker-service"
      - "traefik.http.services.gitea-docker-service.loadbalancer.server.port=3000"
      # SSH Access
      - 'traefik.tcp.routers.gitlab-ssh-router.entrypoints=ssh'
      - 'traefik.tcp.routers.gitlab-ssh-router.rule=HostSNI(`*`)'
      - 'traefik.tcp.routers.gitlab-ssh-router.service=gitlab-ssh-service'
      - 'traefik.tcp.services.gitlab-ssh-service.loadbalancer.server.port=22'
      ## Watchtower manual update
      - "com.centurylinklabs.watchtower.enable=true"

  ########################################################################
  # Gitea Runner
  ########################################################################
  gitea-runner:
    image: gitea/act_runner:nightly
    container_name: gitea-runner
    networks:
      home_internal:
    security_opt:
      - no-new-privileges:true
    restart: always
    environment:
      # DOCKER_HOST: tcp://socket-proxy:2375
      CONFIG_FILE: /config.yaml
      GITEA_INSTANCE_URL: "https://gitea.$DOMAINNAME_CLOUD_SERVER"
      GITEA_RUNNER_REGISTRATION_TOKEN: "${REGISTRATION_TOKEN}"
      GITEA_RUNNER_NAME: "${RUNNER_NAME}"
    depends_on:
      - gitea
    volumes:
      - $DOCKERDIR/appdata/gitea-runner/config.yaml:/config.yaml
      - $DOCKERDIR/appdata/gitea-runner/data:/data
      - $YOCTOCACHEDIR:/cache
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      ## Watchtower manual update
      - "com.centurylinklabs.watchtower.enable=true"

  ########################################################################
  # VSCode
  ########################################################################
  vscode:
    image: lscr.io/linuxserver/code-server:latest
    container_name: vscode
    ports:
      - "$VSCODE_PORT:8443"
    volumes:
      - $DOCKERDIR:/data/docker
      - $HAHOMEDIR:/data/homeassistant
      - $HOMEDIR:/data/home
      - $DOCKERDIR/appdata/vscode:/config
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      DOCKER_HOST: tcp://socket-proxy:2375
    networks:
      socket_proxy:
      home_internal:
    security_opt:
      - no-new-privileges:true
    restart: always
    labels:
      - "traefik.enable=true"
      ## HTTP Access
      - "traefik.http.routers.vscode-http-router.entrypoints=https"
      - "traefik.http.routers.vscode-http-router.rule=Host(`code.$DOMAINNAME_CLOUD_SERVER`)"
      - "traefik.http.routers.vscode-http-router.tls=true"
      - "traefik.http.routers.vscode-http-router.middlewares=chain-oauth@file"
      - "traefik.http.routers.vscode-http-router.service=vscode-http-service"
      - "traefik.http.services.vscode-http-service.loadbalancer.server.port=8443"
      ## Watchtower manual update
      - "com.centurylinklabs.watchtower.enable=true"

  ########################################################################
  # Guacd - Guacamole daemon
  ########################################################################
  guacd:
    image: guacamole/guacd
    container_name: guacd
    networks:
      home_internal:
    security_opt:
      - no-new-privileges:true
    restart: always
    labels:
      ## Watchtower manual update
      - "com.centurylinklabs.watchtower.enable=true"

  ########################################################################
  # Guacamole - Remote desktop, SSH, on Telnet on any HTML5 Browser
  ########################################################################
  # Create all databases and tables first
  guacamole:
    image: guacamole/guacamole:latest
    container_name: guacamole
    environment:
      GUACD_HOSTNAME: guacd
      MYSQL_HOSTNAME: mariadb-guacemole
      MYSQL_PORT: $GUACDB_PORT
      MYSQL_DATABASE: guacemole
      MYSQL_USER: $GUAC_MYSQL_USER
      MYSQL_PASSWORD: $GUACEMOLE_PASSWORD
    networks:
      home_internal:
    security_opt:
      - no-new-privileges:true
    restart: always
    labels:
      - "traefik.enable=true"
      ## HTTP Access
      - "traefik.http.routers.guacamole-http-router.entrypoints=https"
      - "traefik.http.routers.guacamole-http-router.rule=Host(`guacamole.$DOMAINNAME_CLOUD_SERVER`)"
      - "traefik.http.routers.guacamole-http-router.tls=true"
      - "traefik.http.routers.guacamole-http-router.middlewares=chain-oauth@file"
      - "traefik.http.routers.guacamole-http-router.service=guacamole-http-service"
      - "traefik.http.services.guacamole-http-service.loadbalancer.server.port=8080"
      ## Watchtower manual update
      - "com.centurylinklabs.watchtower.enable=true"

  ########################################################################
  # Portainer - WebUI for Containers
  ########################################################################
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    command: -H tcp://socket-proxy:2375
    volumes:
      - $DOCKERDIR/appdata/portainer/data:/data
    environment:
      - TZ=$TZ
    ports:
      - "$PORTAINER_PORT:9000"
    networks:
      home_internal:
      socket_proxy:
    security_opt:
      - no-new-privileges:true
    restart: always
    depends_on:
      - socket-proxy
    labels:
      - "traefik.enable=true"
      ## HTTP Access
      - "traefik.http.routers.portainer-http-router.entrypoints=https"
      - "traefik.http.routers.portainer-http-router.rule=Host(`portainer.$DOMAINNAME_CLOUD_SERVER`)"
      - "traefik.http.routers.portainer-http-router.tls=true"
      - "traefik.http.routers.portainer-http-router.middlewares=chain-oauth@file"
      - "traefik.http.routers.portainer-http-router.service=portainer-http-service"
      - "traefik.http.services.portainer-http-service.loadbalancer.server.port=9000"
      ## Watchtower manual update
      - "com.centurylinklabs.watchtower.enable=true"

  ########################################################################
  # Heimdall - Container dashboard
  ########################################################################
  heimdall:
    container_name: heimdall
    image: lscr.io/linuxserver/heimdall:latest
    networks:
      home_internal:
      socket_proxy:
    security_opt:
      - no-new-privileges:true
    restart: always
    volumes:
      - $DOCKERDIR/appdata/heimdall:/config
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      DOCKER_HOST: tcp://socket-proxy:2375
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.heimdall-http-router.entrypoints=https"
      - "traefik.http.routers.heimdall-http-router.rule=Host(`$DOMAINNAME_CLOUD_SERVER`,`www.$DOMAINNAME_CLOUD_SERVER`)"
      - "traefik.http.routers.heimdall-http-router.tls=true"
      - "traefik.http.routers.heimdall-http-router.middlewares=chain-oauth@file"
      - "traefik.http.routers.heimdall-http-router.service=heimdall-http-service"
      - "traefik.http.services.heimdall-http-service.loadbalancer.server.port=80"
      ## Watchtower manual update
      - "com.centurylinklabs.watchtower.enable=true"

  ########################################################################
  # Dozzle - Runtime insight in running containers
  ########################################################################
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    networks:
      - home_internal
      - socket_proxy
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_FILTER: "status=running"
      DOCKER_HOST: tcp://socket-proxy:2375
    security_opt:
      - no-new-privileges:true
    restart: always
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.dozzle-http-router.entrypoints=https"
      - "traefik.http.routers.dozzle-http-router.rule=Host(`dozzle.$DOMAINNAME_CLOUD_SERVER`)"
      - "traefik.http.routers.dozzle-http-router.tls=true"
      - "traefik.http.routers.dozzle-http-router.middlewares=chain-oauth@file"
      - "traefik.http.routers.dozzle-http-router.service=dozzle-http-service"
      - "traefik.http.services.dozzle-http-service.loadbalancer.server.port=8080"
      ## Watchtower manual update
      - "com.centurylinklabs.watchtower.enable=true"